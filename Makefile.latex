# PDF output.  Org mode generates Latex, and Latexmk generates the PDF.
# Everything that's generated goes into OUT and is safe to delete.

# Directories of input files
TEX := tex
IMG := img

# Directories of output files
OUT := build/latex
IMG_OUT := $(OUT)/img
PDF_OUT := $(OUT)/pdf

TEXINPUTS := '.:$(TEX):$(OUT):' # Trailing ':' will make pdflatex include system paths
LATEXMK_ARGS := -pdflatex=xelatex -output-directory=$(PDF_OUT) -pdf -quiet

# Convert all SVG images from IMG folder to PDF into IMG_OUT folder.
SVG_SRC := $(wildcard $(IMG)/*.svg)
SVG_DST := $(patsubst $(IMG)/%.svg, $(IMG_OUT)/%.pdf, $(SVG_SRC))

.PHONY: clean go dirs latex

latex: dirs $(PDF_OUT)/main.pdf

$(PDF_OUT)/main.pdf: refs.bib \
                     $(TEX)/main.tex \
                     $(TEX)/preamble.tex \
                     $(TEX)/edstim-preamble.tex \
                     $(TEX)/edstim-cover.tex \
                     $(TEX)/leftover-words \
                     $(TEX)/alphabetic-pagewords.bbx \
	                   $(SVG_DST) \
                     $(OUT)/acks.tex \
                     $(OUT)/abstract-en.tex \
                     $(OUT)/abstract-fr.tex \
                     $(OUT)/manuscript.tex
	env TEXINPUTS=${TEXINPUTS} latexmk ${LATEXMK_ARGS} $(TEX)/main.tex

# Only useful for debugging the TeX output with Synctex, since it does not
# re-export the TeX from changes in the Org document.
go:
	env TEXINPUTS=${TEXINPUTS} latexmk ${LATEXMK_ARGS} -pvc $(TEX)/main.tex

$(OUT)/manuscript.tex: manuscript.org $(TEX)/export-setup.el build/deps/org/org.el
	@echo 'Exporting to LaTeX...'
# Export whole Org document to LaTeX, with the prelude.
	@emacs --quick --batch \
         --load $(TEX)/export-setup.el \
         --file manuscript.org \
         --eval '(message (format "Org version %s" (org-version)))' \
         --eval '(org-latex-export-to-latex nil nil nil t)'

# Org creates the TeX in the same directory as the Org document.  Maybe there is
# a way to override it with ELisp, but for now...
	mv manuscript.tex $(OUT)

$(OUT)/acks.tex: manuscript.org $(TEX)/export-setup.el
# Export only the subtree Acknowledgements.
	@emacs --quick --batch \
         --load $(TEX)/export-setup.el \
         --file manuscript.org \
         --eval '(re-search-forward "\\\* Acknowledgements")' \
         --eval '(org-set-property "EXPORT_FILE_NAME" "$@")' \
         --eval '(org-latex-export-to-latex nil t nil t)'

$(OUT)/abstract-en.tex: manuscript.org $(TEX)/export-setup.el
# Export only the subtree Abstract.
	@emacs --quick --batch \
         --load $(TEX)/export-setup.el \
         --file manuscript.org \
         --eval '(re-search-forward "\\\* Abstract")' \
         --eval '(org-set-property "EXPORT_FILE_NAME" "$@")' \
         --eval '(org-latex-export-to-latex nil t nil t)'

$(OUT)/abstract-fr.tex: manuscript.org $(TEX)/export-setup.el
# Export only the subtree Résumé.
	@emacs --quick --batch \
         --load $(TEX)/export-setup.el \
         --file manuscript.org \
         --eval '(re-search-forward "\\\* Résumé")' \
         --eval '(org-set-property "EXPORT_FILE_NAME" "$@")' \
         --eval '(org-latex-export-to-latex nil t nil t)'

# Extract individual SVG from SVG containing multiple diagrams.
$(IMG_OUT)/%.multi.pdf: img/%.multi.svg bin/svgsplit
	./bin/svgsplit pdf $< $(IMG_OUT)
  # We actually create multiple files, and we can't know their names from the
  # Makefile.  So we use a phony file to know when we need to keep track of
  # the last time we ran the command.
	@touch $@

# Convert SVG to PDF.
$(IMG_OUT)/%.pdf: img/%.svg
	rsvg-convert --format pdf --output $@ $<

# Latex can find the JPGs in the IMG folder; no need to move them.

# Create build directories
dirs: $(PDF_OUT) $(IMG_OUT)

$(PDF_OUT):
	mkdir --parents $(PDF_OUT)

$(IMG_OUT):
	mkdir --parents $(IMG_OUT)

# We need a specific org-plus-contrib version (8.3.5, as 9.0.1 fails to build)
build/deps/org/org.el: build/deps/org-plus-contrib.tar
	mkdir --parents build/deps/org
  # Extract in the given directory, forget the directory name in the archive,
  # and touch all files to avoid triggering this make target again.
	tar xf $< --directory build/deps/org --strip-components=1 --touch

build/deps/org-plus-contrib.tar:
	mkdir --parents build/deps
	wget http://orgmode.org/elpa/org-plus-contrib-20160905.tar --output-document build/deps/org-plus-contrib.tar

clean:
	latexmk -output-directory=$(PDF_OUT) -C -f $(TEX)/main.tex
	rm --force $(PDF_OUT)/main.synctex.gz \
             $(PDF_OUT)/main.bbl \
             $(PDF_OUT)/main.run.xml \
             $(OUT)/manuscript.tex \
             $(OUT)/acks.tex \
             $(IMG_OUT)/*.pdf

# Local Variables:
# mode: makefile
# End:
